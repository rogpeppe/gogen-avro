// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     evolution.avsc
 */
package avro

import (
	"io"
	"fmt"

	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/vm/types"
)


type UnionStringIntTypeEnum int
const (

	 UnionStringIntTypeEnumString UnionStringIntTypeEnum = 0

	 UnionStringIntTypeEnumInt UnionStringIntTypeEnum = 1

)

type UnionStringInt struct {

	String string

	Int int32

	UnionType UnionStringIntTypeEnum
}

func writeUnionStringInt(r *UnionStringInt, w io.Writer) error {
	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType{
	
	case UnionStringIntTypeEnumString:
		return vm.WriteString(r.String, w)
        
	case UnionStringIntTypeEnumInt:
		return vm.WriteInt(r.Int, w)
        
	}
	return fmt.Errorf("invalid value for *UnionStringInt")
}

func NewUnionStringInt() *UnionStringInt {
	return &UnionStringInt{}
}

func (_ *UnionStringInt) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *UnionStringInt) SetInt(v int32) { panic("Unsupported operation") }
func (_ *UnionStringInt) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *UnionStringInt) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionStringInt) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *UnionStringInt) SetString(v string) { panic("Unsupported operation") }
func (r *UnionStringInt) SetLong(v int64) { 
	r.UnionType = (UnionStringIntTypeEnum)(v)
}
func (r *UnionStringInt) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
		
		return (*types.String)(&r.String)
		
	
	case 1:
		
		
		return (*types.Int)(&r.Int)
		
	
	}
	panic("Unknown field index")
}
func (_ *UnionStringInt) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionStringInt) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionStringInt) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *UnionStringInt) Finalize()  { }
