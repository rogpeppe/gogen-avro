// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     maps.avsc
 */
package avro

import (
	"io"
	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
)

func writeMapBool(r *MapBool, w io.Writer) error {
	err := vm.WriteLong(int64(len(r.M)), w)
	if err != nil || len(r.M) == 0 {
		return err
	}
	for k, e := range r.M {
		err = vm.WriteString(k, w)
		if err != nil {
			return err
		}
		err = vm.WriteBool(e, w)
		if err != nil {
			return err
		}
	}
	return vm.WriteLong(0, w)
}

type MapBool struct {
	keys []string
	values []bool
	M map[string]bool
}

func NewMapBool() *MapBool{
	return &MapBool {
		keys: make([]string, 0),
		values: make([]bool, 0),
		M: make(map[string]bool),
	}
}

func (_ *MapBool) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *MapBool) SetInt(v int32) { panic("Unsupported operation") }
func (_ *MapBool) SetLong(v int64) { panic("Unsupported operation") }
func (_ *MapBool) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *MapBool) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *MapBool) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *MapBool) SetString(v string) { panic("Unsupported operation") }
func (_ *MapBool) SetUnionElem(v int64) { panic("Unsupported operation") }
func (_ *MapBool) Get(i int) types.Field { panic("Unsupported operation") }
func (_ *MapBool) SetDefault(i int) { panic("Unsupported operation") }
func (r *MapBool) Finalize() { 
	for i := range r.keys {
		r.M[r.keys[i]] = r.values[i]
	}
	r.keys = nil
	r.values = nil
}

func (r *MapBool) AppendMap(key string) types.Field { 
	r.keys = append(r.keys, key)
	var v bool
	
	r.values = append(r.values, v)
	
	return (*types.Boolean)(&r.values[len(r.values)-1])
	
}

func (_ *MapBool) AppendArray() types.Field { panic("Unsupported operation") }

