// Code generated by github.com/rogpeppe/gogen-avro/v7. DO NOT EDIT.
/*
 * SOURCE:
 *     namespace.avsc
 */
package avro

import (
	"fmt"
	"io"

	"github.com/rogpeppe/gogen-avro/v7/vm"
	"github.com/rogpeppe/gogen-avro/v7/vm/types"
)

type UnionNullHeaderworksDatatypeUUIDTypeEnum int

const (
	UnionNullHeaderworksDatatypeUUIDTypeEnumNull UnionNullHeaderworksDatatypeUUIDTypeEnum = 0

	UnionNullHeaderworksDatatypeUUIDTypeEnumHeaderworksDatatypeUUID UnionNullHeaderworksDatatypeUUIDTypeEnum = 1
)

type UnionNullHeaderworksDatatypeUUID struct {
	Null *types.NullVal

	HeaderworksDatatypeUUID *HeaderworksDatatypeUUID

	UnionType UnionNullHeaderworksDatatypeUUIDTypeEnum
}

func writeUnionNullHeaderworksDatatypeUUID(r *UnionNullHeaderworksDatatypeUUID, w io.Writer) error {
	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {

	case UnionNullHeaderworksDatatypeUUIDTypeEnumNull:
		return vm.WriteNull(r.Null, w)

	case UnionNullHeaderworksDatatypeUUIDTypeEnumHeaderworksDatatypeUUID:
		return writeHeaderworksDatatypeUUID(r.HeaderworksDatatypeUUID, w)

	}
	return fmt.Errorf("invalid value for *UnionNullHeaderworksDatatypeUUID")
}

func NewUnionNullHeaderworksDatatypeUUID() *UnionNullHeaderworksDatatypeUUID {
	return &UnionNullHeaderworksDatatypeUUID{}
}

func (_ *UnionNullHeaderworksDatatypeUUID) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) SetString(v string)  { panic("Unsupported operation") }
func (r *UnionNullHeaderworksDatatypeUUID) SetLong(v int64) {
	r.UnionType = (UnionNullHeaderworksDatatypeUUIDTypeEnum)(v)
}
func (r *UnionNullHeaderworksDatatypeUUID) Get(i int) types.Field {
	switch i {

	case 0:

		return r.Null

	case 1:

		r.HeaderworksDatatypeUUID = NewHeaderworksDatatypeUUID()

		return r.HeaderworksDatatypeUUID

	}
	panic("Unknown field index")
}
func (_ *UnionNullHeaderworksDatatypeUUID) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullHeaderworksDatatypeUUID) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) Finalize()                {}
