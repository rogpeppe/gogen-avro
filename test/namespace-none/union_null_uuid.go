// Code generated by github.com/rogpeppe/gogen-avro/v7. DO NOT EDIT.
/*
 * SOURCE:
 *     namespace.avsc
 */
package avro

import (
	"fmt"
	"io"

	"github.com/rogpeppe/gogen-avro/v7/vm"
	"github.com/rogpeppe/gogen-avro/v7/vm/types"
)

type UnionNullUUIDTypeEnum int

const (
	UnionNullUUIDTypeEnumNull UnionNullUUIDTypeEnum = 0

	UnionNullUUIDTypeEnumUUID UnionNullUUIDTypeEnum = 1
)

type UnionNullUUID struct {
	Null *types.NullVal

	UUID *UUID

	UnionType UnionNullUUIDTypeEnum
}

func writeUnionNullUUID(r *UnionNullUUID, w io.Writer) error {
	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {

	case UnionNullUUIDTypeEnumNull:
		return vm.WriteNull(r.Null, w)

	case UnionNullUUIDTypeEnumUUID:
		return writeUUID(r.UUID, w)

	}
	return fmt.Errorf("invalid value for *UnionNullUUID")
}

func NewUnionNullUUID() *UnionNullUUID {
	return &UnionNullUUID{}
}

func (_ *UnionNullUUID) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullUUID) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullUUID) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullUUID) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullUUID) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullUUID) SetString(v string)  { panic("Unsupported operation") }
func (r *UnionNullUUID) SetLong(v int64) {
	r.UnionType = (UnionNullUUIDTypeEnum)(v)
}
func (r *UnionNullUUID) Get(i int) types.Field {
	switch i {

	case 0:

		return r.Null

	case 1:

		r.UUID = NewUUID()

		return r.UUID

	}
	panic("Unknown field index")
}
func (_ *UnionNullUUID) SetDefault(i int)                 { panic("Unsupported operation") }
func (_ *UnionNullUUID) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionNullUUID) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ *UnionNullUUID) Finalize()                        {}
