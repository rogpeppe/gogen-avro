// Code generated by github.com/rogpeppe/gogen-avro/v7. DO NOT EDIT.
/*
 * SOURCE:
 *     recursive.avsc
 */
package avro

import (
	"fmt"
	"io"

	"github.com/rogpeppe/gogen-avro/v7/vm"
	"github.com/rogpeppe/gogen-avro/v7/vm/types"
)

type RecursiveFieldUnionTypeEnum int

const (
	RecursiveFieldUnionTypeEnumNull RecursiveFieldUnionTypeEnum = 0

	RecursiveFieldUnionTypeEnumRecursiveUnionTestRecord RecursiveFieldUnionTypeEnum = 1
)

type RecursiveFieldUnion struct {
	Null *types.NullVal

	RecursiveUnionTestRecord *RecursiveUnionTestRecord

	UnionType RecursiveFieldUnionTypeEnum
}

func writeRecursiveFieldUnion(r *RecursiveFieldUnion, w io.Writer) error {
	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {

	case RecursiveFieldUnionTypeEnumNull:
		return vm.WriteNull(r.Null, w)

	case RecursiveFieldUnionTypeEnumRecursiveUnionTestRecord:
		return writeRecursiveUnionTestRecord(r.RecursiveUnionTestRecord, w)

	}
	return fmt.Errorf("invalid value for *RecursiveFieldUnion")
}

func NewRecursiveFieldUnion() *RecursiveFieldUnion {
	return &RecursiveFieldUnion{}
}

func (_ *RecursiveFieldUnion) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *RecursiveFieldUnion) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *RecursiveFieldUnion) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *RecursiveFieldUnion) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *RecursiveFieldUnion) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *RecursiveFieldUnion) SetString(v string)  { panic("Unsupported operation") }
func (r *RecursiveFieldUnion) SetLong(v int64) {
	r.UnionType = (RecursiveFieldUnionTypeEnum)(v)
}
func (r *RecursiveFieldUnion) Get(i int) types.Field {
	switch i {

	case 0:

		return r.Null

	case 1:

		r.RecursiveUnionTestRecord = NewRecursiveUnionTestRecord()

		return r.RecursiveUnionTestRecord

	}
	panic("Unknown field index")
}
func (_ *RecursiveFieldUnion) SetDefault(i int)                 { panic("Unsupported operation") }
func (_ *RecursiveFieldUnion) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *RecursiveFieldUnion) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ *RecursiveFieldUnion) Finalize()                        {}
