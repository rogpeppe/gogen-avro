// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     recursive.avsc
 */
package avro

import (
	"io"
	"fmt"

	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/vm/types"
)


type UnionNullRecursiveUnionTestRecordTypeEnum int
const (

	 UnionNullRecursiveUnionTestRecordTypeEnumNull UnionNullRecursiveUnionTestRecordTypeEnum = 0

	 UnionNullRecursiveUnionTestRecordTypeEnumRecursiveUnionTestRecord UnionNullRecursiveUnionTestRecordTypeEnum = 1

)

type UnionNullRecursiveUnionTestRecord struct {

	Null *types.NullVal

	RecursiveUnionTestRecord *RecursiveUnionTestRecord

	UnionType UnionNullRecursiveUnionTestRecordTypeEnum
}

func writeUnionNullRecursiveUnionTestRecord(r *UnionNullRecursiveUnionTestRecord, w io.Writer) error {
	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType{
	
	case UnionNullRecursiveUnionTestRecordTypeEnumNull:
		return vm.WriteNull(r.Null, w)
        
	case UnionNullRecursiveUnionTestRecordTypeEnumRecursiveUnionTestRecord:
		return writeRecursiveUnionTestRecord(r.RecursiveUnionTestRecord, w)
        
	}
	return fmt.Errorf("invalid value for *UnionNullRecursiveUnionTestRecord")
}

func NewUnionNullRecursiveUnionTestRecord() *UnionNullRecursiveUnionTestRecord {
	return &UnionNullRecursiveUnionTestRecord{}
}

func (_ *UnionNullRecursiveUnionTestRecord) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *UnionNullRecursiveUnionTestRecord) SetInt(v int32) { panic("Unsupported operation") }
func (_ *UnionNullRecursiveUnionTestRecord) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *UnionNullRecursiveUnionTestRecord) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullRecursiveUnionTestRecord) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *UnionNullRecursiveUnionTestRecord) SetString(v string) { panic("Unsupported operation") }
func (r *UnionNullRecursiveUnionTestRecord) SetLong(v int64) { 
	r.UnionType = (UnionNullRecursiveUnionTestRecordTypeEnum)(v)
}
func (r *UnionNullRecursiveUnionTestRecord) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
		
		return r.Null
		
	
	case 1:
		
		r.RecursiveUnionTestRecord = NewRecursiveUnionTestRecord()
		
		
		return r.RecursiveUnionTestRecord
		
	
	}
	panic("Unknown field index")
}
func (_ *UnionNullRecursiveUnionTestRecord) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionNullRecursiveUnionTestRecord) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionNullRecursiveUnionTestRecord) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *UnionNullRecursiveUnionTestRecord) Finalize()  { }
